# Code generated by dhall-to-yaml.  DO NOT EDIT.
jobs:
  "build-and-test":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - run:
        command: "cd hs && make package.yaml"
        name: hs package.yaml
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-2-{{ checksum \"hs/stack.yaml\" }}-{{ checksum \"hs/package.yaml\" }}"
        - "hs-2-{{ checksum \"hs/stack.yaml\" }}"
        - "hs-2-"
        - "hs-"
    - run:
        command: "cd hs && make hs-deps"
        name: install hs dependencies
        no_output_timeout: 10m
    - save_cache:
        key: "hs-2-{{ checksum \"hs/stack.yaml\" }}-{{ checksum \"hs/package.yaml\" }}"
        paths:
        - /root/.stack
        - hs/.stack_work
    - run:
        command: "cd hs && make hs-clean"
        name: clean hs
        no_output_timeout: 10m
    - run:
        command: "cd hs && make hs-build"
        name: build hs
        no_output_timeout: 10m
    - run:
        command: "cd hs && make hs-test-xml"
        name: "test hs (xml)"
        no_output_timeout: 20m
    - store_test_results:
        path: "hs/test-reports"
    - run:
        command: "cd hs && make hs-check"
        name: check hs
        no_output_timeout: 10m
    - store_artifacts:
        path: hs/stan.html
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd scripts/ethereum-devnet && make build"
        name: "build ethereum-devnet"
        no_output_timeout: 10m
    - run:
        command: "cd js && make build test"
        name: build and test js
        no_output_timeout: 10m
    - run:
        command: |
          docker pull reachsh/algorand-devnet:0.1
          docker run --entrypoint /bin/sh reachsh/algorand-devnet:0.1 -c 'echo $REACH_GIT_HASH'
        name: "pull algorand-devnet"
        no_output_timeout: 10m
    - jq/install
    - run:
        command: "scripts/docker-check.sh || echo 'XXX allowed to fail'"
        name: "Is dockerhub up to date?"
        no_output_timeout: 10m
  "docker-lint":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "hadolint/hadolint:v1.18.0-6-ga0d655d-alpine"
    steps:
    - checkout
    - run:
        command: apk add make bash curl jq
        name: "install make, bash, curl, and jq"
        no_output_timeout: 10m
    - run:
        command: "make docker-lint"
        name: run hadolint
        no_output_timeout: 10m
    - slack/notify:
        event: fail
        template: basic_fail_1
  "docs-deploy":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "circleci/node:9.9.0"
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/docs_workspace
    - run:
        command: |
          # sudo npm install -g --silent gh-pages@3.0.0
          # git config user.email "ci-build@reach.sh"
          # git config user.name "ci-build"
          git config user.email "devbot@reach.sh"
          git config user.name "reachdevbot"
        name: Install and configure dependencies
        no_output_timeout: 10m
    - add_ssh_keys:
        fingerprints:
        - "83:23:9c:21:6a:74:61:48:20:da:a3:45:79:89:3e:86"
    - run:
        command: |
          git fetch origin gh-pages
          git checkout gh-pages
          git pull origin gh-pages
          git rm -r .
          cp -r /tmp/docs_workspace/docs/* .
          git add .
          # https://stackoverflow.com/questions/8123674/how-to-git-commit-nothing-without-an-error
          git diff-index --quiet HEAD || git commit -m "[ci skip] docs for $CIRCLE_SHA1"
          git push origin gh-pages
        name: "Deploy docs to gh-pages branch"
        no_output_timeout: 10m
    - slack/notify:
        event: fail
        template: basic_fail_1
  "docs-render":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - run:
        command: "cd pygments && make install"
        name: "install pygments-reach"
        no_output_timeout: 10m
    - run:
        command: "cd docs-src && make render"
        name: render docs
        no_output_timeout: 10m
    - store_artifacts:
        path: docs/
    - run:
        command: |
          mkdir -p /tmp/docs_workspace
          cp -r docs /tmp/docs_workspace/
        name: copy docs to workspace
        no_output_timeout: 10m
    - persist_to_workspace:
        paths:
        - docs
        root: /tmp/docs_workspace
    - slack/notify:
        event: fail
        template: basic_fail_1
  "rebuild-abstract-simul":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean abstract-simul"
        name: "clean abstract-simul"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build abstract-simul"
        name: "rebuild abstract-simul"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-abstract-simul-{{ .Revision }}"
        paths:
        - "/examples/abstract-simul"
    - jq/install
  "rebuild-algorand-placeholder":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean algorand-placeholder"
        name: "clean algorand-placeholder"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build algorand-placeholder"
        name: "rebuild algorand-placeholder"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-algorand-placeholder-{{ .Revision }}"
        paths:
        - "/examples/algorand-placeholder"
    - jq/install
  "rebuild-argz":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean argz"
        name: clean argz
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build argz"
        name: rebuild argz
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-argz-{{ .Revision }}"
        paths:
        - /examples/argz
    - jq/install
  "rebuild-chicken-fork":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean chicken-fork"
        name: "clean chicken-fork"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build chicken-fork"
        name: "rebuild chicken-fork"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-chicken-fork-{{ .Revision }}"
        paths:
        - "/examples/chicken-fork"
    - jq/install
  "rebuild-chicken-parallel":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean chicken-parallel"
        name: "clean chicken-parallel"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build chicken-parallel"
        name: "rebuild chicken-parallel"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-chicken-parallel-{{ .Revision }}"
        paths:
        - "/examples/chicken-parallel"
    - jq/install
  "rebuild-chicken-race":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean chicken-race"
        name: "clean chicken-race"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build chicken-race"
        name: "rebuild chicken-race"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-chicken-race-{{ .Revision }}"
        paths:
        - "/examples/chicken-race"
    - jq/install
  "rebuild-maybe-send":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean maybe-send"
        name: "clean maybe-send"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build maybe-send"
        name: "rebuild maybe-send"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-maybe-send-{{ .Revision }}"
        paths:
        - "/examples/maybe-send"
    - jq/install
  "rebuild-multiple-pr-case":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean multiple-pr-case"
        name: "clean multiple-pr-case"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build multiple-pr-case"
        name: "rebuild multiple-pr-case"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-multiple-pr-case-{{ .Revision }}"
        paths:
        - "/examples/multiple-pr-case"
    - jq/install
  "rebuild-multisig":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean multisig"
        name: clean multisig
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build multisig"
        name: rebuild multisig
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-multisig-{{ .Revision }}"
        paths:
        - /examples/multisig
    - jq/install
  "rebuild-nft-dumb":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean nft-dumb"
        name: "clean nft-dumb"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build nft-dumb"
        name: "rebuild nft-dumb"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-nft-dumb-{{ .Revision }}"
        paths:
        - "/examples/nft-dumb"
    - jq/install
  "rebuild-nim":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean nim"
        name: clean nim
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build nim"
        name: rebuild nim
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-nim-{{ .Revision }}"
        paths:
        - /examples/nim
    - jq/install
  "rebuild-object-digest":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean object-digest"
        name: "clean object-digest"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build object-digest"
        name: "rebuild object-digest"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-object-digest-{{ .Revision }}"
        paths:
        - "/examples/object-digest"
    - jq/install
  "rebuild-overview":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean overview"
        name: clean overview
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build overview"
        name: rebuild overview
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-overview-{{ .Revision }}"
        paths:
        - /examples/overview
    - jq/install
  "rebuild-overview-more-deps":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean overview-more-deps"
        name: "clean overview-more-deps"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build overview-more-deps"
        name: "rebuild overview-more-deps"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-overview-more-deps-{{ .Revision }}"
        paths:
        - "/examples/overview-more-deps"
    - jq/install
  "rebuild-overview-react":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean overview-react"
        name: "clean overview-react"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build overview-react"
        name: "rebuild overview-react"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-overview-react-{{ .Revision }}"
        paths:
        - "/examples/overview-react"
    - jq/install
  "rebuild-own-addr":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean own-addr"
        name: "clean own-addr"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build own-addr"
        name: "rebuild own-addr"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-own-addr-{{ .Revision }}"
        paths:
        - "/examples/own-addr"
    - jq/install
  "rebuild-popularity-contest":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean popularity-contest"
        name: "clean popularity-contest"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build popularity-contest"
        name: "rebuild popularity-contest"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-popularity-contest-{{ .Revision }}"
        paths:
        - "/examples/popularity-contest"
    - jq/install
  "rebuild-race":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean race"
        name: clean race
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build race"
        name: rebuild race
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-race-{{ .Revision }}"
        paths:
        - /examples/race
    - jq/install
  "rebuild-raffle":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean raffle"
        name: clean raffle
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build raffle"
        name: rebuild raffle
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-raffle-{{ .Revision }}"
        paths:
        - /examples/raffle
    - jq/install
  "rebuild-remote":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean remote"
        name: clean remote
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build remote"
        name: rebuild remote
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-remote-{{ .Revision }}"
        paths:
        - /examples/remote
    - jq/install
  "rebuild-rent-seeking":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean rent-seeking"
        name: "clean rent-seeking"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build rent-seeking"
        name: "rebuild rent-seeking"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-rent-seeking-{{ .Revision }}"
        paths:
        - "/examples/rent-seeking"
    - jq/install
  "rebuild-rental":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean rental"
        name: clean rental
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build rental"
        name: rebuild rental
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-rental-{{ .Revision }}"
        paths:
        - /examples/rental
    - jq/install
  "rebuild-secured-loan":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean secured-loan"
        name: "clean secured-loan"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build secured-loan"
        name: "rebuild secured-loan"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-secured-loan-{{ .Revision }}"
        paths:
        - "/examples/secured-loan"
    - jq/install
  "rebuild-timeoutception":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean timeoutception"
        name: clean timeoutception
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build timeoutception"
        name: rebuild timeoutception
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-timeoutception-{{ .Revision }}"
        paths:
        - /examples/timeoutception
    - jq/install
  "rebuild-ttt":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean ttt"
        name: clean ttt
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build ttt"
        name: rebuild ttt
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-ttt-{{ .Revision }}"
        paths:
        - /examples/ttt
    - jq/install
  "rebuild-tut-2":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean tut-2"
        name: "clean tut-2"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-2"
        name: "rebuild tut-2"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-tut-2-{{ .Revision }}"
        paths:
        - "/examples/tut-2"
    - jq/install
  "rebuild-tut-3":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean tut-3"
        name: "clean tut-3"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-3"
        name: "rebuild tut-3"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-tut-3-{{ .Revision }}"
        paths:
        - "/examples/tut-3"
    - jq/install
  "rebuild-tut-4":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean tut-4"
        name: "clean tut-4"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-4"
        name: "rebuild tut-4"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-tut-4-{{ .Revision }}"
        paths:
        - "/examples/tut-4"
    - jq/install
  "rebuild-tut-5":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean tut-5"
        name: "clean tut-5"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-5"
        name: "rebuild tut-5"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-tut-5-{{ .Revision }}"
        paths:
        - "/examples/tut-5"
    - jq/install
  "rebuild-tut-5-attack":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean tut-5-attack"
        name: "clean tut-5-attack"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-5-attack"
        name: "rebuild tut-5-attack"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-tut-5-attack-{{ .Revision }}"
        paths:
        - "/examples/tut-5-attack"
    - jq/install
  "rebuild-tut-6":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean tut-6"
        name: "clean tut-6"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-6"
        name: "rebuild tut-6"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-tut-6-{{ .Revision }}"
        paths:
        - "/examples/tut-6"
    - jq/install
  "rebuild-tut-7":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean tut-7"
        name: "clean tut-7"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-7"
        name: "rebuild tut-7"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-tut-7-{{ .Revision }}"
        paths:
        - "/examples/tut-7"
    - jq/install
  "rebuild-tut-7-array":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean tut-7-array"
        name: "clean tut-7-array"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-7-array"
        name: "rebuild tut-7-array"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-tut-7-array-{{ .Revision }}"
        paths:
        - "/examples/tut-7-array"
    - jq/install
  "rebuild-tut-7-rpc":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean tut-7-rpc"
        name: "clean tut-7-rpc"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-7-rpc"
        name: "rebuild tut-7-rpc"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-tut-7-rpc-{{ .Revision }}"
        paths:
        - "/examples/tut-7-rpc"
    - jq/install
  "rebuild-tut-8":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean tut-8"
        name: "clean tut-8"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-8"
        name: "rebuild tut-8"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-tut-8-{{ .Revision }}"
        paths:
        - "/examples/tut-8"
    - jq/install
  "rebuild-tut-9":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean tut-9"
        name: "clean tut-9"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-9"
        name: "rebuild tut-9"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-tut-9-{{ .Revision }}"
        paths:
        - "/examples/tut-9"
    - jq/install
  "rebuild-variable_transfers":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean variable_transfers"
        name: clean variable_transfers
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build variable_transfers"
        name: rebuild variable_transfers
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-variable_transfers-{{ .Revision }}"
        paths:
        - /examples/variable_transfers
    - jq/install
  "rebuild-workshop-fomo":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean workshop-fomo"
        name: "clean workshop-fomo"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build workshop-fomo"
        name: "rebuild workshop-fomo"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-workshop-fomo-{{ .Revision }}"
        paths:
        - "/examples/workshop-fomo"
    - jq/install
  "rebuild-workshop-fomo-generalized":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean workshop-fomo-generalized"
        name: "clean workshop-fomo-generalized"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build workshop-fomo-generalized"
        name: "rebuild workshop-fomo-generalized"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-workshop-fomo-generalized-{{ .Revision }}"
        paths:
        - "/examples/workshop-fomo-generalized"
    - jq/install
  "rebuild-workshop-hash-lock":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean workshop-hash-lock"
        name: "clean workshop-hash-lock"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build workshop-hash-lock"
        name: "rebuild workshop-hash-lock"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-workshop-hash-lock-{{ .Revision }}"
        paths:
        - "/examples/workshop-hash-lock"
    - jq/install
  "rebuild-workshop-relay":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean workshop-relay"
        name: "clean workshop-relay"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build workshop-relay"
        name: "rebuild workshop-relay"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-workshop-relay-{{ .Revision }}"
        paths:
        - "/examples/workshop-relay"
    - jq/install
  "rebuild-workshop-trust-fund":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: "cd examples && ./one.sh clean workshop-trust-fund"
        name: "clean workshop-trust-fund"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build workshop-trust-fund"
        name: "rebuild workshop-trust-fund"
        no_output_timeout: 10m
    - save_cache:
        key: "rebuild-workshop-trust-fund-{{ .Revision }}"
        paths:
        - "/examples/workshop-trust-fund"
    - jq/install
  "run-abstract-simul":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-abstract-simul-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run abstract-simul"
        name: "run abstract-simul"
        no_output_timeout: 5m
    - jq/install
  "run-algorand-placeholder":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-algorand-placeholder-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run algorand-placeholder"
        name: "run algorand-placeholder"
        no_output_timeout: 5m
    - jq/install
  "run-argz":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-argz-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run argz"
        name: run argz
        no_output_timeout: 5m
    - jq/install
  "run-chicken-fork":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-chicken-fork-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run chicken-fork"
        name: "run chicken-fork"
        no_output_timeout: 5m
    - jq/install
  "run-chicken-parallel":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-chicken-parallel-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run chicken-parallel"
        name: "run chicken-parallel"
        no_output_timeout: 5m
    - jq/install
  "run-chicken-race":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-chicken-race-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run chicken-race"
        name: "run chicken-race"
        no_output_timeout: 5m
    - jq/install
  "run-maybe-send":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-maybe-send-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run maybe-send"
        name: "run maybe-send"
        no_output_timeout: 5m
    - jq/install
  "run-multiple-pr-case":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-multiple-pr-case-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run multiple-pr-case"
        name: "run multiple-pr-case"
        no_output_timeout: 5m
    - jq/install
  "run-multisig":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-multisig-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run multisig"
        name: run multisig
        no_output_timeout: 5m
    - jq/install
  "run-nft-dumb":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-nft-dumb-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run nft-dumb"
        name: "run nft-dumb"
        no_output_timeout: 5m
    - jq/install
  "run-nim":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-nim-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run nim"
        name: run nim
        no_output_timeout: 5m
    - jq/install
  "run-object-digest":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-object-digest-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run object-digest"
        name: "run object-digest"
        no_output_timeout: 5m
    - jq/install
  "run-overview":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-overview-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run overview"
        name: run overview
        no_output_timeout: 5m
    - jq/install
  "run-overview-more-deps":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-overview-more-deps-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run overview-more-deps"
        name: "run overview-more-deps"
        no_output_timeout: 5m
    - jq/install
  "run-overview-react":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-overview-react-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run overview-react"
        name: "run overview-react"
        no_output_timeout: 5m
    - jq/install
  "run-own-addr":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-own-addr-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run own-addr"
        name: "run own-addr"
        no_output_timeout: 5m
    - jq/install
  "run-popularity-contest":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-popularity-contest-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run popularity-contest"
        name: "run popularity-contest"
        no_output_timeout: 5m
    - jq/install
  "run-race":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-race-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run race"
        name: run race
        no_output_timeout: 5m
    - jq/install
  "run-raffle":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-raffle-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run raffle"
        name: run raffle
        no_output_timeout: 5m
    - jq/install
  "run-remote":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-remote-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run remote"
        name: run remote
        no_output_timeout: 5m
    - jq/install
  "run-rent-seeking":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-rent-seeking-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run rent-seeking"
        name: "run rent-seeking"
        no_output_timeout: 5m
    - jq/install
  "run-rental":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-rental-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run rental"
        name: run rental
        no_output_timeout: 5m
    - jq/install
  "run-secured-loan":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-secured-loan-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run secured-loan"
        name: "run secured-loan"
        no_output_timeout: 5m
    - jq/install
  "run-timeoutception":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-timeoutception-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run timeoutception"
        name: run timeoutception
        no_output_timeout: 5m
    - jq/install
  "run-ttt":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-ttt-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run ttt"
        name: run ttt
        no_output_timeout: 5m
    - jq/install
  "run-tut-2":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-tut-2-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run tut-2"
        name: "run tut-2"
        no_output_timeout: 5m
    - jq/install
  "run-tut-3":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-tut-3-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run tut-3"
        name: "run tut-3"
        no_output_timeout: 5m
    - jq/install
  "run-tut-4":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-tut-4-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run tut-4"
        name: "run tut-4"
        no_output_timeout: 5m
    - jq/install
  "run-tut-5":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-tut-5-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run tut-5"
        name: "run tut-5"
        no_output_timeout: 5m
    - jq/install
  "run-tut-5-attack":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-tut-5-attack-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run tut-5-attack"
        name: "run tut-5-attack"
        no_output_timeout: 5m
    - jq/install
  "run-tut-6":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-tut-6-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run tut-6"
        name: "run tut-6"
        no_output_timeout: 5m
    - jq/install
  "run-tut-7":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-tut-7-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run tut-7"
        name: "run tut-7"
        no_output_timeout: 5m
    - jq/install
  "run-tut-7-array":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-tut-7-array-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run tut-7-array"
        name: "run tut-7-array"
        no_output_timeout: 5m
    - jq/install
  "run-tut-7-rpc":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-tut-7-rpc-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run tut-7-rpc"
        name: "run tut-7-rpc"
        no_output_timeout: 5m
    - jq/install
  "run-tut-8":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-tut-8-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run tut-8"
        name: "run tut-8"
        no_output_timeout: 5m
    - jq/install
  "run-tut-9":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-tut-9-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run tut-9"
        name: "run tut-9"
        no_output_timeout: 5m
    - jq/install
  "run-variable_transfers":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-variable_transfers-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run variable_transfers"
        name: run variable_transfers
        no_output_timeout: 5m
    - jq/install
  "run-workshop-fomo":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-workshop-fomo-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run workshop-fomo"
        name: "run workshop-fomo"
        no_output_timeout: 5m
    - jq/install
  "run-workshop-fomo-generalized":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-workshop-fomo-generalized-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run workshop-fomo-generalized"
        name: "run workshop-fomo-generalized"
        no_output_timeout: 5m
    - jq/install
  "run-workshop-hash-lock":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-workshop-hash-lock-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run workshop-hash-lock"
        name: "run workshop-hash-lock"
        no_output_timeout: 5m
    - jq/install
  "run-workshop-relay":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-workshop-relay-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run workshop-relay"
        name: "run workshop-relay"
        no_output_timeout: 5m
    - jq/install
  "run-workshop-trust-fund":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - restore_cache:
        keys:
        - "rebuild-workshop-trust-fund-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh run workshop-trust-fund"
        name: "run workshop-trust-fund"
        no_output_timeout: 5m
    - jq/install
  shellcheck:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable"
    steps:
    - checkout
    - shellcheck/install
    - run:
        command: "make sh-lint"
        name: Run shellcheck
        no_output_timeout: 10m
    - slack/notify:
        event: fail
        template: basic_fail_1
orbs:
  jq: "circleci/jq@2.2.0"
  shellcheck: "circleci/shellcheck@2.2.0"
  slack: "circleci/slack@4.1.1"
version: 2.1
workflows:
  "build-and-test":
    jobs:
    - "build-and-test":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
    - "rebuild-algorand-placeholder":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-nim":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-workshop-hash-lock":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-ttt":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-nft-dumb":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-own-addr":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-workshop-fomo-generalized":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-tut-5-attack":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-overview-react":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-multisig":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-variable_transfers":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-chicken-fork":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-overview-more-deps":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-tut-7-array":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-raffle":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-workshop-relay":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-remote":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-popularity-contest":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-secured-loan":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-tut-2":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-workshop-trust-fund":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-tut-4":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-tut-3":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-tut-9":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-workshop-fomo":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-multiple-pr-case":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-tut-5":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-object-digest":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-rental":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-race":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-tut-8":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-timeoutception":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-chicken-parallel":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-tut-6":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-argz":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-tut-7-rpc":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-overview":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-maybe-send":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-tut-7":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-abstract-simul":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-rent-seeking":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "rebuild-chicken-race":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-and-test"
    - "run-algorand-placeholder":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-algorand-placeholder"
    - "run-nim":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-nim"
    - "run-workshop-hash-lock":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-workshop-hash-lock"
    - "run-ttt":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-ttt"
    - "run-nft-dumb":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-nft-dumb"
    - "run-own-addr":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-own-addr"
    - "run-workshop-fomo-generalized":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-workshop-fomo-generalized"
    - "run-tut-5-attack":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-tut-5-attack"
    - "run-overview-react":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-overview-react"
    - "run-multisig":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-multisig"
    - "run-variable_transfers":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-variable_transfers"
    - "run-chicken-fork":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-chicken-fork"
    - "run-overview-more-deps":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-overview-more-deps"
    - "run-tut-7-array":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-tut-7-array"
    - "run-raffle":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-raffle"
    - "run-workshop-relay":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-workshop-relay"
    - "run-remote":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-remote"
    - "run-popularity-contest":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-popularity-contest"
    - "run-secured-loan":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-secured-loan"
    - "run-tut-2":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-tut-2"
    - "run-workshop-trust-fund":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-workshop-trust-fund"
    - "run-tut-4":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-tut-4"
    - "run-tut-3":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-tut-3"
    - "run-tut-9":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-tut-9"
    - "run-workshop-fomo":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-workshop-fomo"
    - "run-multiple-pr-case":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-multiple-pr-case"
    - "run-tut-5":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-tut-5"
    - "run-object-digest":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-object-digest"
    - "run-rental":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-rental"
    - "run-race":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-race"
    - "run-tut-8":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-tut-8"
    - "run-timeoutception":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-timeoutception"
    - "run-chicken-parallel":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-chicken-parallel"
    - "run-tut-6":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-tut-6"
    - "run-argz":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-argz"
    - "run-tut-7-rpc":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-tut-7-rpc"
    - "run-overview":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-overview"
    - "run-maybe-send":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-maybe-send"
    - "run-tut-7":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-tut-7"
    - "run-abstract-simul":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-abstract-simul"
    - "run-rent-seeking":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-rent-seeking"
    - "run-chicken-race":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "rebuild-chicken-race"
  docs:
    jobs:
    - "docs-render":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
    - "docs-deploy":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        filters:
          branches:
            only: master
        requires:
        - "docs-render"
  lint:
    jobs:
    - shellcheck:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
